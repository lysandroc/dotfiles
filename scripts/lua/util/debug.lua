-- local M = {}
--
-- ---@param value any
-- ---@param opts? {loc:string}
-- function M._dump(value, opts)
--   opts = opts or {}
--   opts.loc = opts.loc or M.get_loc()
--   if vim.in_fast_event() then
--     return vim.schedule(function()
--       M._dump(value, opts)
--     end)
--   end
--   opts.loc = vim.fn.fnamemodify(opts.loc, ":~:.")
--   local msg = vim.inspect(value)
--   vim.notify(msg, vim.log.levels.INFO, {
--     title = "Debug: " .. opts.loc,
--     on_open = function(win)
--       vim.wo[win].conceallevel = 3
--       vim.wo[win].concealcursor = ""
--       vim.wo[win].spell = false
--       local buf = vim.api.nvim_win_get_buf(win)
--       if not pcall(vim.treesitter.start, buf, "lua") then
--         vim.bo[buf].filetype = "lua"
--       end
--     end,
--   })
-- end
--
-- function M.dump(...)
--   local value = { ... }
--   if vim.tbl_isempty(value) then
--     value = nil
--   else
--     value = vim.tbl_islist(value) and vim.tbl_count(value) <= 1 and value[1] or value
--   end
--   M._dump(value)
-- end
--
-- return M
